# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions
# More info on Python, GitHub Actions, and Azure App Service: https://aka.ms/python-webapps-actions

name: Build and deploy Python app to Azure Web App - bestdressed

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read #This is required for actions/checkout

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python version
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'

      # üõ†Ô∏è Local Build Section (Optional)
      # The following section in your workflow is designed to catch build issues early on the client side, before deployment. This can be helpful for debugging and validation. However, if this step significantly increases deployment time and early detection is not critical for your workflow, you may remove this section to streamline the deployment process.
      # (Optional) Local build step removed to avoid uploading a local virtualenv.
      # Let Azure (Oryx) perform the build and pip install during deployment.
      - name: Upload artifact for deployment jobs
        uses: actions/upload-artifact@v4
        with:
          name: python-app
          path: |
            .

      # üö´ Opting Out of Oryx Build
      # If you prefer to disable the Oryx build process during deployment, follow these steps:
      # 1. Remove the SCM_DO_BUILD_DURING_DEPLOYMENT app setting from your Azure App Service Environment variables.
      # 2. Refer to sample workflows for alternative deployment strategies: https://github.com/Azure/actions-workflow-samples/tree/master/AppService
      

  deploy:
    runs-on: ubuntu-latest
    needs: build
    permissions:
      id-token: write #This is required for requesting the JWT
      contents: read #This is required for actions/checkout

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: python-app
      
      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_5B5DFC9CDE1F4FC394AA5AF7AF482E6E }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_1AB775D03EE24A1996BB864C3CF55E49 }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_E919FB29A90B4881BA9DA0165B5068CC }}

      - name: Set Azure App Service app settings
        # Use Azure CLI to persist environment variables into App Service application settings
        # Ensure server-side build (Oryx) runs during deployment by setting SCM_DO_BUILD_DURING_DEPLOYMENT=true
        # Requires a repository secret named AZURE_RESOURCE_GROUP with the App Service's resource group
        run: |
          az webapp config appsettings set --name 'bestdressed' --resource-group "${{ secrets.AZURE_RESOURCE_GROUP }}" --settings ENVIRONMENT="${{ secrets.ENVIRONMENT }}" ALLOWED_HOSTS="${{ secrets.ALLOWED_HOSTS }}" SECRET_KEY="${{ secrets.SECRET_KEY }}" SCM_DO_BUILD_DURING_DEPLOYMENT=true

      - name: 'Deploy to Azure Web App'
        uses: azure/webapps-deploy@v3
        id: deploy-to-webapp
        with:
          app-name: 'bestdressed'
          slot-name: 'Production'
          